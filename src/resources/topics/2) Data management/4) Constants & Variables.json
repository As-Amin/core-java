{
    "paragraphs": [
        {
            "subheading": "What is a variable in Java?",
            "content": "A variable is a container which stores data specified by a program.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "The data type must be specified in Java as it is a strongly typed language (variables must be specified with a data type) unlike loosley typed languages such as Python or JavaScript.",
            "images": [
                {
                    "url": "/Constants & Variables/IMAGE(Constants & Variables Cartoon).png",
                    "caption": "(Source: https://bit.ly/36Owdqn)"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": [
                {
                    "columns": [
                        {
                            "column": "Variable Type"
                        },
                        {
                            "column": "Description"
                        }
                    ],
                    "rows": [
                        {
                            "row": "Local,Declared inside of a method"
                        },
                        {
                            "row": "Static,Can be accessed by any class"
                        },
                        {
                            "row": "Instance,Declared outside of a method but outside of a class"
                        }
                    ]
                }
            ]
        },
        {
            "subheading": "Local variables",
            "content": "A variable which is declared inside of a method. This variable can only be used within the method.",
            "images": [
                {
                    "url": "/Constants & Variables/CODE(Local Variable).png",
                    "caption": "'A local variable declared as an integer.'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "Static variables",
            "content": "A variable which is declared inside of a class but outside of a method. It can be accessed by any class by calling the class name in which it is declared followed by the variable name.",
            "images": [
                {
                    "url": "/Constants & Variables/CODE(Static Variable).png",
                    "caption": "'A static string variable declared in a class.'"
                },
                {
                    "url": "/Constants & Variables/OUTPUT(Static Variable).png",
                    "caption": "'The output in the console after running the program above.'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "Most static variables are declared public so that they can be accessed by any class but they can also be declared private. Static variables are usually used to declare constants (covered on this page), but can also be used as variables.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "Instance variables",
            "content": "A variable declared inside a class but not inside a method. It is called an instance variable because it is only accessible by the individual classes instance and is different for each instance of a class.",
            "images": [
                {
                    "url": "/Constants & Variables/CODE(Instance Variable).png",
                    "caption": "'Two instance variables declared in the class but outside of a method.'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "Constants",
            "content": "A constant in Java is like a variable but it cannot be changed after runtime (read-only). To declare a variable as a constant, just add the 'final' keyword before declaring the variable like below!",
            "images": [
                {
                    "url": "/Constants & Variables/CODE(Final Constant).png",
                    "caption": "'A static final string declared in a class.'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "The syntax to declare final static variables is in uppercase characters with words seperated with underscores.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "Constants and variables questions",
            "content": "",
            "images": [],
            "openChoiceQuiz": [
                {
                    "question": "Finish the missing keyword: '_____ cannot change after runtime.'",
                    "answer": "constants",
                    "feedbackRight": "Correct! Constants cannot change after runtime.",
                    "feedbackWrong": "Wrong! The answer is constants. Constants cannot change after runtime, however, variable can!"
                }
            ],
            "trueFalseQuiz": [
                {
                    "question": "True or false: Local variables are declared inside of a method",
                    "answer": "True",
                    "feedbackRight": "Correct! Local variables are declared inside methods, static variables outside of a method, accessible by any outside class (global) and instance variables are declared inside a class but not inside a method.",
                    "feedbackWrong": "Wrong! The statement is true. Local variables are declared inside methods, static variables outside of a method, accessible by any outside class (global) and instance variables are declared inside a class but not inside a method."
                },
                {
                    "question": "True or false: Instance variables can be accessed by any class as they are global.",
                    "answer": "False",
                    "feedbackRight": "Correct! Static variables are global and can be accessed by any class. Instance variables cannot be accessed by any class and they are not global!",
                    "feedbackWrong": "Wrong! The statement is false. Static variables are global and can be accessed by any class. Instance variables cannot be accessed by any class and they are not global!"
                }
            ],
            "multipleChoiceQuiz": [
                {
                    "question": "If I declare a variable with the keyword 'final' before the data type, what type of variable is it?",
                    "options": [
                        {
                            "option": "Instance"
                        },
                        {
                            "option": "Constant"
                        },
                        {
                            "option": "Static"
                        },
                        {
                            "option": "Local"
                        }
                    ],
                    "answer": "Constant",
                    "feedbackRight": "Correct! Constants are declared with the final keyword.",
                    "feedbackWrong": "Wrong! The answer is constant. Constants are declared with the final keyword."
                }
            ],
            "tables": []
        }
    ]
}