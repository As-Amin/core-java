{
    "paragraphs": [
        {
            "subheading": "What is a data structure?",
            "content": "A data structure organises data in memory. Different data structures store data differently in memory which allows for each data structure allowing programmers to handle the data in different ways. For example, some data structures do not allow for data to be modified after runtime, whereas others do etc.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "There are many data structures in Java, this topic will only cover the most common data structures.",
            "images": [
                {
                    "url": "/Data Structures/IMAGE(Data Structures Cartoon).png",
                    "caption": "(Source: http://www.r4d.ch/News/Pages/170609_r4dSkills_DataManagement.aspx)"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "Arrays",
            "content": "Arrays are data structures which store multiple variables of the same data type.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "Arrays are declared using square brackets after the data type and to place the values and variables in curly brackets.",
            "images": [
                {
                    "url": "/Data Structures/CODE(Array Declare).png",
                    "caption": "'Example of how to declare an array'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "To access the elements of an array, you must call the array by its name followed by square brackets with the index of the element you want to access. Remember: Arrays are zero-indexed in Java meaning the elements indexes start at 0.",
            "images": [
                {
                    "url": "/Data Structures/CODE(Array Get).png",
                    "caption": "'Example of how to get an element from an array'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "To change an element of an array, call the element of the array by its index and after the equals symbol, assign the value at that index in the array to the new value of your choice, of the same data type.",
            "images": [
                {
                    "url": "/Data Structures/CODE(Array Set).png",
                    "caption": "'Example of how to change an element of an array'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "You can also access the size of an array. See the example below to see how to do this.",
            "images": [
                {
                    "url": "/Data Structures/CODE(Array Length).png",
                    "caption": "'Example of how to get the length of an array'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "Arrays in Java can also have multiple dimensions e.g. 2D, 3D etc. Multidimensional arrays store multiple sets of different datasets of different lengths but of the same data type, in a single array. To declare a multidimensional array, see the example below.",
            "images": [
                {
                    "url": "/Data Structures/CODE(Array 2D).png",
                    "caption": "'Example of how to create a multi dimensional array and access an element'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "ArrayList",
            "content": "ArrayLists are similar to arrays in that they are data structures which store multiple variables of the same data type however, they are resizeable. Note: ArrayList is not included in Java's default package, it must be imported like the example below.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "To add an element to an array, you must call the ArrayList by its name and call the function 'add()' with the element you want to add to the list in the brackets.",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "To access the elements of an ArrayList, you must call the ArrayList by its name and call the function 'get()' with the index of the element you want to access in the brackets.",
            "images": [
                {
                    "url": "/Data Structures/CODE(ArrayList Add Get).png",
                    "caption": "'Example of how to import and declare an ArrayList, add elements and get elements'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "To change an element of an ArrayList, call the 'set()' method on the ArrayList, with the first parameter being the index you want to change and the second parameter being the new element.",
            "images": [
                {
                    "url": "/Data Structures/CODE(ArrayList Set).png",
                    "caption": "'Example of how to modify an element in an ArrayList'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "",
            "content": "In Java, the ArrayList has much more methods than a regular array. The example below has some examples of these methods.",
            "images": [
                {
                    "url": "/Data Structures/CODE(ArrayList Other).png",
                    "caption": "'Example of other functions that an ArrayList can do'"
                }
            ],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [],
            "multipleChoiceQuiz": [],
            "tables": []
        },
        {
            "subheading": "Data structures questions",
            "content": "",
            "images": [],
            "openChoiceQuiz": [],
            "trueFalseQuiz": [
                {
                    "question": "True or false: Arrays can be resized after runtime.",
                    "answer": "False",
                    "feedbackRight": "Correct! Arrays are fixed in size and cannot be resized after runtime however, elements of an array can change.",
                    "feedbackWrong": "Wrong! The statement is false. Arrays are fixed in size and cannot be resized after runtime however, elements of an array can change."
                },
                {
                    "question": "True or false: You cannot create a multidimensional ArrayList.",
                    "answer": "False",
                    "feedbackRight": "Correct! ArrayLists can be multidimensional just like arrays.",
                    "feedbackWrong": "Wrong! The statement is false. ArrayLists can be multidimensional just like arrays."
                }
            ],
            "multipleChoiceQuiz": [
                {
                    "question": "Which data structure discussed in this topic can store multiple data types?",
                    "options": [
                        {
                            "option": "Array"
                        },
                        {
                            "option": "ArrayList"
                        },
                        {
                            "option": "None"
                        }
                    ],
                    "answer": "None",
                    "feedbackRight": "Correct! None of the data structures discussed in this topic can store multiple data types.",
                    "feedbackWrong": "Wrong! The answer is none. None of the data structures discussed in this topic can store multiple data types."
                }
            ],
            "tables": []
        }
    ]
}